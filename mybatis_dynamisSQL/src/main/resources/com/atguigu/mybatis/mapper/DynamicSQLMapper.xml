<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.mybatis.mapper.DynamicSQLMapper">
<!--    List<Emp> getEmpByCondition(Emp emp);-->
    <select id="getEmpByConditionone" resultType="Emp">
        select *from t_emp where 1=1
        <if test="empName!=null and empName!=''">
            and emp_name=#{empName}
        </if>
        <if test="age!=null and age!=''">
            and emp_name=#{age}
        </if>
        <if test="gender!=null and gender!=''">
            and gender=#{gender}
        </if>
    </select>
<!--    动态Sql
               if:通过test属性中的表达式判断标签中的内容是否有效（是否会拼接到sql中）
               where:
                   1.若结果成立，则自动生成where关键字
                   2.会自动将where标签前的and去掉
                   3.若where标签中没有任何一个条件成立，则where没有任何功能
                   3.trim
                   prefix suffix:在标签中内容前面或后面添加指定内容
                   prefixOverrides suffixOverrides 在标签中内容前面或后面去掉指定内容
                   4.choose,when,otherwise
                    相当于java中的if。。。。else
                    when至少设置一个，otherwise最多设置一个
                   5.forEach
                     collection:设置要循环的数组
                     item：用字符表示数组或集合中的每一个数据
                     separator：设置每次循环的数据之间的分隔符
                     open:循环以什么开始
                     close：循环以什么结束-->

    <select id="getEmpByCondition" resultType="Emp">
        select *from t_emp
        <trim prefix="where" suffixOverrides="and">
            <if test="empName!=null and empName!=''">
                emp_name=#{empName} and
            </if>
            <if test="age!=null and age!=''">
                age=#{age} and
            </if>
            <if test="gender!=null and gender!=''">
               gender=#{gender}
            </if>
        </trim>

    </select>
<!--        List<Emp> getEmpByChose(Emp emp);-->
    <select id="getEmpByChose" resultType="Emp">
        select *from t_emp
        <where>
            <choose>
                <when test="empName!=null and empName!=''">
                    emp_name=#{empName}
                </when>
                <when test="age!=null and age!=''">
                    age=#{age}
                </when>
                <when test="gender!=null and gender!=''">
                    gender=#{gender}
                </when>
            </choose>
        </where>
    </select>
<!--    void insertMoreEmp(@Param("emps") List<Emp> emps);-->
    <insert id="insertMoreEmp">
        insert into t_emp values
        <foreach collection="emps" item="emp" separator=",">
            (null,#{emp.empName},#{emp.age},#{emp.gender},null)
        </foreach>
    </insert>
<!--        void deleteMoreEmp(@Param("empIds") Integer[] empIds);-->
    <delete id="deleteMoreEmp">
        delete from t_emp where emp_id in
        (
            <foreach collection="empIds" item="empId" separator="," open="(" close=")">
                #{empId}
            </foreach>
            )
    </delete>
</mapper>