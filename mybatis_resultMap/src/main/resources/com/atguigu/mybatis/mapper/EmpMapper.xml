<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.mybatis.mapper.EmpMapper">
<!--        Emp getEmpByEmpId(@Param("empId") Integer empId);
          1.当查询的字段设置别名，和属性名保持一致
          2.当字段符合MySql的要求使用_，而属性符合java的要求使用驼峰
          此时可以在MyBatis的核心配置文件中来设置一个全局配置可以自动将_映射为驼峰
          3.使用resultMap自定义映射处理
          处理多对一的映射关系
          1.级联方式处理
          2.association
          3.分布查询
          处理一对多的映射关系
          1.collection
          2.分布查询

-->
    <resultMap id="empResultMap" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
    </resultMap>
<!--    设置自定义的映射关系
        id：唯一标识
        type:处理映射关系的实体类的类型
        常用标签
        id：处理主键和实体类中实现的映射关系
        result：处理普通字段和实体类中属性的映射关系
        association:处理多对一的映射关系(处理实体类类型的属性)
        column:设置映射关系中的字段名，必须是sql查询出的某个字段
        property:设置映射关系中的属性的属性名，必须是处理的实体类类型中的属性名
        collection :处理一对多的映射关系-->
    <select id="getEmpByEmpId" resultMap="empResultMap">
        SELECT *from t_emp where emp_id=#{empId}
    </select>

    <select id="getEmpByEmpOId" resultType="Emp">
<!--          SELECT emp_id empId,emp_name EmpName,age,gender from t_emp where emp_id=#{empId}-->
           SELECT *from t_emp where emp_id=#{empId}
    </select>
<!--        Emp getEmpAndDeptByEmpId(@Param("empId") Integer empId);-->
    <resultMap id="empAndDeptResultMapOne" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
        <result column="dept_id" property="dept.deptId"></result>
        <result column="dept_Name" property="dept.deptName"></result>
    </resultMap>
    <resultMap id="empAndDeptResultMap" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
<!--        association property:设置需要处理映射关系的属性的属性名
                        javaType:设置要处理的属性的类型
-->
        <association property="dept" javaType="Dept">
            <id column="dept_id" property="deptId"></id>
            <result column="dept_name" property="deptName"></result>
        </association>
    </resultMap>
    <select id="getEmpAndDeptByEmpId" resultMap="empAndDeptResultMap">
        select * from t_emp left join t_dept on t_emp.dept_id=t_dept.dept_id where t_emp.emp_id=#{empId}
    </select>
    <resultMap id="empAndDeptByStepResultMap" type="Emp">
        <id column="emp_id" property="empId"></id>
        <result column="emp_name" property="empName"></result>
        <result column="age" property="age"></result>
        <result column="gender" property="gender"></result>
<!--       property:设置需要处理映射关系属性的属性名
           select:设置分布查询的Sql的唯一标识
           column:将查询出的某个字段作为分布查询的SQl的条件
           fetchType:在开启了延迟加载的环境中，通过该属性设置当前的查询是否使用延迟加载
           eager；立即加载
           lazy:延迟加载
           -->
        <association property="dept" fetchType="eager"
                     select="com.atguigu.mybatis.mapper.DeptMapper.getEmpAndDeptByStepTwo"
                     column="dept_id">
        </association>
    </resultMap>
<!--        Emp getEmpAndDeptByStep(@Param("empId") Integer empId);-->
    <select id="getEmpAndDeptByStep" resultMap="empAndDeptByStepResultMap">
        select *from t_emp where emp_id=#{empId}
    </select>
<!--        List<Emp> getEmpAndDeptByStepTwo(@Param("deptId") Integer deptId)；
-->
    <select id="getEmpAndDeptByStepTwo" resultType="Emp">
        select *from t_emp where dept_id=#{deptId};
    </select>
</mapper>